{"version":3,"sources":["images/wknd-logo-dk.svg","images/icon-close.svg","images/icon-loading.svg","api/useGraphQL.js","components/Error.js","components/Loading.js","components/AEMText.js","components/AdventureDetail.js","components/Adventures.js","components/Home.js","App.js","index.js","server/CustomModelClient.js"],"names":["module","exports","process","REACT_APP_HOST_URI","REACT_APP_GRAPHQL_ENDPOINT","useGraphQL","query","skipCall","useState","data","setData","errorMessage","setErrors","useEffect","window","fetch","method","headers","body","JSON","stringify","then","response","json","errors","map","error","message","join","mapErrors","catch","Error","className","this","props","Component","Loading","src","loadingIcon","alt","TextEditConfig","emptyLabel","isEmpty","TextV2IsEmptyFn","resourceType","AEMText","withMappable","TextV2","MapTo","adventurePathsQuery","Contributer","pictureReference","_path","fullName","occupation","withRouter","location","adventurePath","setAdventurePath","adventures","pathArray","adventureList","items","item","pathname","substring","lastIndexOf","length","replace","forEach","path","indexOf","adventureData","adventureByPath","to","backIcon","adventureTitle","pagePath","itemPath","adventureActivity","adventureType","adventureTripLength","adventureGroupSize","adventureDifficulty","adventurePrice","adventurePrimaryImage","dangerouslySetInnerHTML","__html","adventureDescription","html","adventureItinerary","adventureContributor","AdventureItem","adventureName","split","allAdventuresQuery","filterQuery","activity","Adventures","setQuery","onClick","adventure","index","key","Home","REACT_APP_AEM_PROJECT_ROOT","App","logo","PathUtils","toAEMPath","modelClient","modelPath","err","Promise","reject","url","_apiHost","status","statusText","ModelClient","ModelManager","initializeAsync","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.012674e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wknd-logo-dk.36593320.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.f227c489.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-loading.200bc7ed.svg\";","/*\nCopyright 2020 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport {useState, useEffect} from 'react';\n\nconst { REACT_APP_HOST_URI, REACT_APP_GRAPHQL_ENDPOINT } = process.env;\n\n/*\n    Custom React Hook to perform a GraphQL query\n    query paramter is a GraphQL query\n    environment variable REACT_APP_GRAPHQL_ENDPOINT is used to point to endpoint in AEM\n*/\nfunction useGraphQL(query, skipCall) {\n\n    let [data, setData] = useState(null);\n    let [errorMessage, setErrors] = useState(null);\n\n    useEffect(() => {\n        if(!skipCall) {\n            window.fetch(\n            REACT_APP_HOST_URI + REACT_APP_GRAPHQL_ENDPOINT,\n            {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({query}),\n            }\n            ).then(response => response.json())\n            .then(({data, errors}) => {\n                //If there are errors in the response set the error message\n                if(errors) {\n                    setErrors(mapErrors(errors));\n                }\n                //Otherwise if data in the response set the data as the results\n                if(data) {\n                    setData(data);\n                }\n            })\n            .catch((error) => {\n                setErrors(error);\n            });\n        }\n    }, [query, skipCall]);\n\n    return {data, errorMessage}\n}\n\n/**\n * concatenate error messages into a single string.\n * @param {*} errors\n */\nfunction mapErrors(errors) {\n    return errors.map((error) => error.message).join(\",\");\n}\nexport default useGraphQL\n","/*\nCopyright 2020 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React, {Component} from 'react';\n\nclass Error extends Component {\n\n    render() {\n        return (<div className=\"error\">\n              <span className=\"error-message\">{`Error: ${this.props.errorMessage}`}</span>\n          </div>);\n    }\n}\n\nexport default Error;","/*\nCopyright 2020 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React, {Component} from 'react';\nimport loadingIcon from '../images/icon-loading.svg';\n\nclass Loading extends Component {\n\n    render() {\n        return (<div className=\"loading\">\n              <img src={loadingIcon} alt=\"Loading...\" />\n          </div>);\n    }\n}\n\nexport default Loading;","import { withMappable, MapTo } from '@adobe/aem-react-editable-components';\nimport { TextV2, TextV2IsEmptyFn } from \"@adobe/aem-core-components-react-base\";\n\n/**\n * Default Edit configuration for the Text component that interact with the Core Text component and sub-types\n *\n * @type EditConfig\n */\nconst TextEditConfig = {\n  emptyLabel: 'Text',\n  isEmpty: TextV2IsEmptyFn,\n  resourceType: 'wknd-spa/components/text'\n};\n\nexport const AEMText = withMappable(TextV2, TextEditConfig);\n\nMapTo('wknd-spa/components/text')(TextV2, TextEditConfig);\n","/*\nCopyright 2020 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React, { useState, useEffect } from 'react';\nimport { withRouter, Link} from \"react-router-dom\";\nimport useGraphQL from '../api/useGraphQL';\nimport backIcon from '../images/icon-close.svg';\nimport Error from './Error';\nimport Loading from './Loading';\nimport './AdventureDetail.scss';\nimport { AEMText } from './AEMText';\n\nfunction AdventureDetail(props) {\n    const [adventurePath, setAdventurePath] = useState(props.location?.data);\n\n    // if path is unavailable, fetch all adventures list and retrieve detail path\n    const { data: adventures } = useGraphQL(adventurePathsQuery, adventurePath);\n\n    useEffect(() => {\n        if(adventures) {\n            const pathArray = adventures.adventureList?.items?.map((item) => item._path);\n            let pathname = window.location.pathname;\n            pathname = pathname.substring(pathname.lastIndexOf(\"/\") + 1, pathname.length);\n            pathname = pathname.replace(/(.html)/, '');\n            pathArray.forEach(path => path.indexOf(pathname) >= 0 && setAdventurePath(path));\n        }\n    }, [adventures]);\n\n    //parse the content fragment from the url\n    //Use a custom React Hook to execute the GraphQL query\n    // execute the query only when the path is available\n    const { data, errorMessage } = useGraphQL(adventureDetailQuery(adventurePath), !adventurePath);\n\n    //If there is an error with the GraphQL query\n    if(errorMessage) return <Error errorMessage={errorMessage} />;\n\n    //If data is null then return a loading icon...\n    if(!data) return <Loading />;\n\n    //Set adventureData variable based on graphQL response\n    let adventureData = data.adventureByPath.item;\n    let pathname = adventurePath.substring(adventurePath.lastIndexOf(\"/\") + 1, adventurePath.length);\n\n    return (\n        <div className=\"adventure-detail\">\n          <Link className=\"adventure-detail-close-button\" to={\"/home\"}>\n            <img className=\"Backbutton-icon\" src={backIcon} alt=\"Return\" />\n          </Link>\n          <h1 className=\"adventure-detail-title\">{adventureData.adventureTitle}</h1>\n          <AEMText\n            pagePath={`/content/wknd-spa/home/adventures/${pathname}`}\n            itemPath='text21' />\n          <div className=\"adventure-detail-info\">\n            <div className=\"adventure-detail-info-label\">Activity</div>\n            <div className=\"adventure-detail-info-description\">{adventureData.adventureActivity}</div>\n            <div className=\"adventure-detail-info-label\">Type</div>\n            <div className=\"adventure-detail-info-description\">{adventureData.adventureType}</div>\n            <div className=\"adventure-detail-info-label\">Trip Length</div>\n            <div className=\"adventure-detail-info-description\">{adventureData.adventureTripLength}</div>\n            <div className=\"adventure-detail-info-label\">Group Size</div>\n            <div className=\"adventure-detail-info-description\">{adventureData.adventureGroupSize}</div>\n            <div className=\"adventure-detail-info-label\">Difficulty</div>\n            <div className=\"adventure-detail-info-description\">{adventureData.adventureDifficulty}</div>\n            <div className=\"adventure-detail-info-label\">Price</div>\n            <div className=\"adventure-detail-info-description\">{adventureData.adventurePrice}</div>\n          </div>\n          <div className=\"adventure-detail-content\">\n            <img className=\"adventure-detail-primaryimage\"\n                 src={adventureData.adventurePrimaryImage._path} alt={adventureData.adventureTitle}/>\n            <div dangerouslySetInnerHTML={{__html: adventureData.adventureDescription.html}}></div>\n            <h2>Itinerary</h2>\n            <hr />\n            <div className=\"adventure-detail-itinerary\"\n                 dangerouslySetInnerHTML={{__html: adventureData.adventureItinerary.html}}></div>\n            <Contributer {...adventureData.adventureContributor} />\n          </div>\n\n        </div>\n    );\n}\n\nfunction adventureDetailQuery(_path) {\n  return _path && `{\n    adventureByPath (_path: \"${_path}\") {\n      item {\n        _path\n          adventureTitle\n          adventureActivity\n          adventureType\n          adventurePrice\n          adventureTripLength\n          adventureGroupSize\n          adventureDifficulty\n          adventurePrice\n          adventurePrimaryImage {\n            ... on ImageRef {\n              _path\n              mimeType\n              width\n              height\n            }\n          }\n          adventureDescription {\n            html\n          }\n          adventureItinerary {\n            html\n          }\n      }\n    }\n  }\n  `;\n}\n\n/**\n * Query for all Adventures\n */\nconst adventurePathsQuery = `\n  {\n    adventureList {\n      items {\n        _path\n      }\n    }\n  }\n`;\n\nfunction Contributer(props) {\n\n  if(!props) {\n    return null;\n  }\n  let pictureReference = null;\n  if(props.pictureReference) {\n     pictureReference =  <img className=\"contributor-image\" src={props.pictureReference._path} alt={props.fullName} />\n  }\n\n  return (\n    <div className=\"contributor\">\n      <hr className=\"contributor-separator\" />\n      {pictureReference}\n      <h3 className=\"contributor-name\">{props.fullName}</h3>\n      <h4 className=\"contributor-occupation\">{props.occupation}</h4>\n    </div>);\n}\n\n\nexport default withRouter(AdventureDetail);\n","/*\nCopyright 2020 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport useGraphQL from '../api/useGraphQL';\nimport Error from './Error';\nimport Loading from './Loading';\nimport './Adventures.scss';\n\n\nfunction Adventures() {\n\n    //Use React Hooks to set the initial GraphQL query to a variable named `query`\n    const [query, setQuery] = useState(allAdventuresQuery);\n    //Use a custom React Hook to execute the GraphQL query\n    const { data, errorMessage } = useGraphQL(query);\n\n    //If there is an error with the GraphQL query\n    if(errorMessage) return <Error errorMessage={errorMessage} />;\n\n    //If data is null then return a loading state...\n    if(!data) return <Loading />;\n\n    return (\n        <div className=\"adventures\">\n          <button onClick={() => setQuery(allAdventuresQuery)}>All</button>\n          <button onClick={() => setQuery(filterQuery('Camping'))}>Camping</button>\n          <button onClick={() => setQuery(filterQuery('Surfing'))}>Surfing</button>\n          <ul className=\"adventure-items\">\n            {\n                //Iterate over the returned data items from the query\n                data.adventureList.items.map((adventure, index) => {\n                    return (\n                        <AdventureItem key={index} {...adventure} />\n                    );\n                })\n            }\n            </ul>\n        </div>\n    );\n}\n\n// Render individual Adventure item\nfunction AdventureItem(props) {\n  const { _path: adventurePath } = props;\n\n  let adventureName = adventurePath.split(\"/\");\n  adventureName = adventureName[adventureName.length - 1];\n\n  return (\n        <li className=\"adventure-item\">\n          <Link to={{\n              pathname:`/adventures/${adventureName}`,\n              data: adventurePath\n          }}>\n            <img className=\"adventure-item-image\" src={props.adventurePrimaryImage._path}\n                 alt={props.adventureTitle} />\n          </Link>\n          <div className=\"adventure-item-length-price\">\n            <div className=\"adventure-item-length\">{props.adventureTripLength}</div>\n            <div className=\"adventure-item-price\">{props.adventurePrice}</div>\n          </div>\n          <div className=\"adventure-item-title\">{props.adventureTitle}</div>\n      </li>\n      );\n}\n\n/**\n * Query for all Adventures\n */\nconst allAdventuresQuery = `\n  {\n    adventureList {\n      items {\n        _path\n        adventureTitle\n        adventurePrice\n        adventureTripLength\n        adventurePrimaryImage {\n          ... on ImageRef {\n            _path\n            mimeType\n            width\n            height\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * Returns a query for Adventures filtered by activity\n */\nfunction filterQuery(activity) {\n  return `\n    {\n      adventureList (filter: {\n        adventureActivity: {\n          _expressions: [\n            {\n              value: \"${activity}\"\n            }\n          ]\n        }\n      }){\n        items {\n          _path\n        adventureTitle\n        adventurePrice\n        adventureTripLength\n        adventurePrimaryImage {\n          ... on ImageRef {\n            _path\n            mimeType\n            width\n            height\n          }\n        }\n      }\n    }\n  }\n  `;\n}\n\n\nexport default Adventures;\n","import React from 'react';\n\nimport Adventures from './Adventures';\nimport { AEMText } from './AEMText';\n\n/***\n * Displays a grid of current adventures\n */\nfunction Home() {\n  return (\n    <div className=\"Home\">\n      <h2>Current Adventures</h2>\n      <AEMText\n        pagePath='/content/wknd-spa/home'\n        itemPath='root/responsivegrid/text' />\n      <Adventures />\n    </div>\n  );\n}\n\nexport default Home;\n","/*\nCopyright 2020 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport logo from './images/wknd-logo-dk.svg';\n\nimport { PathUtils } from '@adobe/aem-spa-page-model-manager';\n\nimport AdventureDetail from './components/AdventureDetail';\nimport Home from './components/Home';\n\nimport './App.scss';\n\nconst { REACT_APP_HOST_URI, REACT_APP_AEM_PROJECT_ROOT } = process.env;\n\nfunction App() {\n  // Transform routing path to accomodate for AEM specific paths\n  // path updated only when opened within AEM editor\n  const transformRoute = (path) => {\n    const aemPathRegex = PathUtils.toAEMPath(path, REACT_APP_HOST_URI, REACT_APP_AEM_PROJECT_ROOT);\n    return aemPathRegex;\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header>\n          <img src={logo} className=\"logo\" alt=\"WKND Logo\"/>\n          <hr />\n        </header>\n      <Switch>\n        <Route path={transformRoute('/adventures/:path')}>\n          <AdventureDetail />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/*\nCopyright 2020 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ModelManager } from \"@adobe/aem-spa-page-model-manager\";\n\nimport { CustomModelClient } from './server/CustomModelClient';\n\nconst modelClient = new CustomModelClient(process.env.REACT_APP_HOST_URI);\nModelManager.initializeAsync({\n    modelClient\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n ~ Copyright 2018 Adobe Systems Incorporated\n ~\n ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n ~ you may not use this file except in compliance with the License.\n ~ You may obtain a copy of the License at\n ~\n ~     http://www.apache.org/licenses/LICENSE-2.0\n ~\n ~ Unless required by applicable law or agreed to in writing, software\n ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n ~ See the License for the specific language governing permissions and\n ~ limitations under the License.\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\nimport { ModelClient } from '@adobe/aem-spa-page-model-manager';\n\n/**\n * Custom ModelClient meant to demonstrate how to customize the request sent to the remote server\n */\nexport class CustomModelClient extends ModelClient {\n\n    /**\n     * Fetches a model using the given a resource path\n     *\n     * @param {string} modelPath - Path to the model\n     * @return {*}\n     */\n    fetch(modelPath) {\n\n        if (!modelPath) {\n            let err = 'Fetching model rejected for path: ' + modelPath;\n            return Promise.reject(new Error(err));\n        }\n\n        // Either the API host has been provided or we make an absolute request relative to the current host\n        let url = `${this._apiHost}${modelPath}`;\n\n        return fetch(url).then(function(response) {\n            if (response.status >= 200 && response.status < 300) {\n                return response.json();\n            } else {\n                let error = new Error('while fetching the model for url: ' + url, response.statusText || response.status);\n                error.response = response;\n\n                return Promise.reject(error);\n            }\n        });\n    }\n}\n"],"sourceRoot":""}